import ts from 'typescript';
export declare function syntaxKindText(element: {
    kind: ts.SyntaxKind;
}): string;
export declare function getCallExpressionName(callExpression: ts.CallExpression): string | undefined;
export declare function createTsProgram(fileNames: string[], baseDir: string, configName: string): ts.Program;
export declare function isSymbol(object: unknown): object is ts.Symbol;
declare function getAliasedSymbol(node: ts.Node, typeChecker: ts.TypeChecker): ts.Symbol | undefined;
declare const tsutils: {
    syntaxKindText: typeof syntaxKindText;
    getCallExpressionName: typeof getCallExpressionName;
    createTsProgram: typeof createTsProgram;
    isSymbol: typeof isSymbol;
    getAliasedSymbol: typeof getAliasedSymbol;
};
export default tsutils;
