"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.VariableDeclarationConverter = void 0;
const typescript_1 = __importDefault(require("typescript"));
const node_converter_1 = require("../../../core/converters/node.converter");
class VariableDeclarationConverter extends node_converter_1.NodeConverter {
    convert(context, node) {
        const sourceFile = node.getSourceFile();
        const initializer = node.initializer;
        if (!initializer || !typescript_1.default.isCallExpression(initializer)) {
            return;
        }
        const item = context.converter.convertNode(context, initializer);
        if (item && context.isRootKind(item.kind)) {
            const symbol = context.typeChecker.getSymbolAtLocation(node.name);
            if (symbol) {
                item.setName(node.name.getText(sourceFile));
                item.filePath = sourceFile.fileName;
                context.addResult({ symbol, item });
            }
            return item;
        }
        return;
    }
}
exports.VariableDeclarationConverter = VariableDeclarationConverter;
