#!/usr/bin/env node
"use strict";
/* eslint-disable @typescript-eslint/no-use-before-define */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const loglevel_1 = __importDefault(require("loglevel"));
const yargs_1 = __importDefault(require("yargs"));
const utils_1 = require("../lib/utils/utils");
yargs_1.default
    .usage('Usage: $0 <command> [options]')
    .strict()
    .commandDir('cmds', { extensions: utils_1.getCommandFilesExtensionsForEnvironment() })
    .option('log', {
    alias: 'l',
    default: 'INFO',
    choices: ['TRACE', 'DEBUG', 'INFO', 'WARN', 'ERROR', 'SILENT']
})
    .help()
    .alias('help', 'h')
    .example('$0 diagram -f "src/**/*.ts"', 'Generate plantUML diagram')
    .demandCommand()
    .wrap(100)
    .middleware([prepare])
    .argv;
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function prepare(argv) {
    loglevel_1.default.setLevel(argv.log);
    loglevel_1.default.debug('prepare - log level:', argv.log);
    utils_1.prepareTraceLogger();
}
